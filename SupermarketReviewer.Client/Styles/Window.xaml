<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:client="clr-namespace:SupermarketReviewer.Client"
                    xmlns:controls="clr-namespace:SupermarketReviewer.Core.Controls;assembly=SupermarketReviewer.Core"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:views="clr-namespace:SupermarketReviewer.Client.Views">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            IsTabStop="false"
                            Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="BaseWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{StaticResource BaseForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource MainWindowBackgroundBrush}" />
        <Setter Property="WindowState" Value="Maximized" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Storyboard x:Key="BusyAnimation"
                RepeatBehavior="Forever">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BusyIndicator"
                                       Storyboard.TargetProperty="(ed:Arc.EndAngle)">
            <EasingDoubleKeyFrame KeyTime="0"
                                  Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:1"
                                  Value="359" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <DataTemplate DataType="{x:Type client:StoreCompareResultsViewModel}">
        <views:StoreCompareResultsView />
    </DataTemplate>
    <Style TargetType="{x:Type controls:BusyIndicator}">
        <Setter Property="Background" Value="CornflowerBlue" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BusyIndicator}">
                    <Grid>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Border x:Name="Screen"
                                Background="Black"
                                Opacity="0.8"
                                Visibility="{TemplateBinding IsBusy,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <ed:Arc x:Name="BusyIndicator"
                                Width="100"
                                Height="100"
                                ArcThickness="5"
                                Fill="{TemplateBinding Background}"
                                Stretch="None"
                                Visibility="{TemplateBinding IsBusy,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource BusyAnimation}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource BusyAnimation}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>